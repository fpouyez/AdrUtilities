name: Release

on:
  push:
    branches:
      - master
      - alpha
      - beta

jobs:
  test:
    name: Test and lint
    uses: fpouyez/AdrUtilities/.github/workflows/development.yml@master

  release:
    name: Release
    needs: test
    runs-on: ubuntu-22.04
    outputs:
      # Pour exporter au niveau des jobs, pour que le job suivnat ait l'information.
      new_tag_version: ${{ steps.tag_version.outputs.new_tag_version }}
    steps:
      - name: "🛡️ harden runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: "🔓 checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "⚙️ setup Node.js"
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20

      - name: "📦 install dependencies"
        run: npm install

      # La première ligne npx semantic-release --dry-run force l'installation.
      - name: Dry run to get the next release version
        id: tag_version
        env:
          GITHUB_TOKEN: ${{ secrets.SEM_RELEASE_PAT }}
        run: |
          npx semantic-release --dry-run
          export NEXT_TAG_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "new_tag_version=${NEXT_TAG_VERSION}" >> $GITHUB_OUTPUT

      # - name: "📤 release preparation"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.SEM_RELEASE_PAT }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: npx semantic-release

  publish:
    needs: release
    if: ${{ needs.release.outputs.new_tag_version != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: "📤 vscode release"
        uses: JCofman/vscodeaction@611fec1de63d45fef75ab4f28e00021af09f67d1 # master
        env:
          PUBLISHER_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}
        with:
          args: publish -p $PUBLISHER_TOKEN 