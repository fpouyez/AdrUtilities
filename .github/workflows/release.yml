name: Release

on:
  push:
    branches:
      - master
      - alpha
      - beta

jobs:
  test:
    name: Test and lint
    uses: fpouyez/AdrUtilities/.github/workflows/development.yml@master

  release:
    name: Release
    needs: test
    runs-on: ubuntu-22.04
    outputs:
      # Pour exporter au niveau des jobs, pour que le job suivnat ait l'information.
      new_tag_version: ${{ steps.semantic_release.outputs.new_release_version }}
    steps:
      - name: "üõ°Ô∏è harden runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-install
        with:
          node-version: 20

      # Garde-fou : v√©rifier qu'une release sera cr√©√©e
      - name: Dry run to verify release will be created
        env:
          GITHUB_TOKEN: ${{ secrets.SEM_RELEASE_PAT }}
        run: |
          npx semantic-release --dry-run | grep -q "The next release version is" || (echo "No release will be created" && exit 1)

      - name: Semantic Release üî•
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.SEM_RELEASE_PAT }}

  publish:
    needs: release
    if: ${{ needs.release.outputs.new_tag_version != '' && needs.release.outputs.new_tag_version != 'undefined' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: v${{ needs.release.outputs.new_tag_version }}
      - uses: ./.github/actions/setup-node-install
        with:
          node-version: 20
      
      - name: Fetch all tags
        run: git fetch --tags --force

      - name: Verify we are on the correct tag
        run: |
          echo "Current tag: $(git describe --tags --exact-match HEAD)"
          echo "Expected tag: v${{ needs.release.outputs.new_tag_version }}"
          if [ "$(git describe --tags --exact-match HEAD)" != "v${{ needs.release.outputs.new_tag_version }}" ]; then
            echo "ERROR: We are not on the expected tag!"
            exit 1
          fi
          echo "‚úÖ Tag verification successful"

      - name: Force clean checkout if needed
        run: |
          git reset --hard HEAD
          git clean -fd
          echo "‚úÖ Clean checkout completed"

      - name: Check package version
        run: cat package.json | grep version

      - name: Check CHANGELOG.md is up to date
        run: |
          echo "=== CHANGELOG.md content ==="
          head -20 CHANGELOG.md
          echo "=== End of CHANGELOG preview ==="
          echo "CHANGELOG.md exists and is readable"

      - name: Verify tag contains updated files
        run: |
          echo "=== Files in current tag ==="
          git ls-tree -r HEAD --name-only | grep -E "(package\.json|CHANGELOG\.md)" || echo "No package.json or CHANGELOG.md found"
          echo "=== Git log for current tag ==="
          git log --oneline -3

      - name: "üì¶ install vsce"
        run: npm install -g vsce

      - name: "üì§ Publish VSCode extension"
        env:
          PUBLISHER_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}
        run: vsce publish -p $PUBLISHER_TOKEN