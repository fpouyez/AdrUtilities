name: Release

on:
  push:
    branches:
      - master
      - alpha
      - beta

jobs:
  test:
    name: Test and lint
    uses: fpouyez/AdrUtilities/.github/workflows/development.yml@master

  release:
    name: Release
    needs: test
    runs-on: ubuntu-22.04
    outputs:
      # Pour exporter au niveau des jobs, pour que le job suivnat ait l'information.
      new_tag_version: ${{ steps.semantic_release.outputs.new_release_version }}
    steps:
      - name: "üõ°Ô∏è harden runner"
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-install
        with:
          node-version: 20

      # Garde-fou : v√©rifier qu'une release sera cr√©√©e
      - name: Dry run to verify release will be created
        env:
          GITHUB_TOKEN: ${{ secrets.SEM_RELEASE_PAT }}
        run: |
          npx semantic-release --dry-run | grep -q "The next release version is" || (echo "No release will be created" && exit 1)

      - name: Semantic Release üî•
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.SEM_RELEASE_PAT }}

  publish:
    needs: release
    if: ${{ needs.release.outputs.new_tag_version != '' && needs.release.outputs.new_tag_version != 'undefined' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: v${{ needs.release.outputs.new_tag_version }}
      - uses: ./.github/actions/setup-node-install
        with:
          node-version: 20
      
      - name: "üì¶ install vsce"
        run: npm install -g vsce

      - name: "üì§ Publish VSCode extension"
        env:
          PUBLISHER_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}
        run: vsce publish -p $PUBLISHER_TOKEN